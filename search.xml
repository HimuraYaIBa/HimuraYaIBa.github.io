<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>IDEA断点调试总结（转）</title>
    <url>/2020/05/02/IDEA%E6%96%AD%E7%82%B9%E8%B0%83%E8%AF%95%E6%80%BB%E7%BB%93%EF%BC%88%E8%BD%AC%EF%BC%89/</url>
    <content><![CDATA[<h1 id="IDEA调试总结（设置断点进行调试）"><a href="#IDEA调试总结（设置断点进行调试）" class="headerlink" title="IDEA调试总结（设置断点进行调试）"></a>IDEA调试总结（设置断点进行调试）</h1><p>先编译好要调试的程序。</p>
<hr>
<h2 id="1-设置断点"><a href="#1-设置断点" class="headerlink" title="1.设置断点"></a>1.设置断点</h2><p><img src="https://pic.downk.cc/item/5eacb3b7c2a9a83be523c3c5.png" alt="1"></p>
<p>选定要设置断点的代码行，在行号的区域后面单击鼠标左键即可。</p>
<hr>
<h2 id="2-开启调试会话"><a href="#2-开启调试会话" class="headerlink" title="2.开启调试会话"></a>2.开启调试会话</h2><p><img src="https://pic.downk.cc/item/5eacb435c2a9a83be52407da.png" alt="2-1"></p>
<p>点击红色箭头指向的小虫子，开始进入调试。</p>
<p> <img src="https://pic.downk.cc/item/5eacb405c2a9a83be523edf2.png" alt="2"></p>
<p>IDE下方出现Debug视图，红色的箭头指向的是现在调试程序停留的代码行，方法f2()中，程序的第11行。红色箭头悬停的区域是程序的方法调用栈区。在这个区域中显示了程序执行到断点处所调用过的所用方法，越下面的方法被调用的越早。</p>
<a id="more"></a>

<hr>
<h2 id="3-单步调试"><a href="#3-单步调试" class="headerlink" title="3.单步调试"></a>3.单步调试</h2><h3 id="3-1-step-over"><a href="#3-1-step-over" class="headerlink" title="3.1 step over"></a>3.1 step over</h3><p><img src="https://pic.downk.cc/item/5eacb494c2a9a83be52434aa.png" alt="3"></p>
<p>点击红色箭头指向的按钮，程序向下执行一行（如果当前行有方法调用，这个方法将被执行完毕返回，然后到下一行）</p>
<h3 id="3-2-step-into"><a href="#3-2-step-into" class="headerlink" title="3.2 step into"></a>3.2 step into</h3><p><img src="https://pic.downk.cc/item/5eacb4c1c2a9a83be5244e38.png" alt="4"></p>
<p>点击红色箭头指向的按钮，程序向下执行一行。如果该行有自定义方法，则运行进入自定义方法（不会进入官方类库的方法）。具体步骤如下：</p>
<p>在自定义方法发f1()处设置断点，执行调试</p>
<p><img src="https://pic.downk.cc/item/5eacb4c1c2a9a83be5244e38.png" alt="5"></p>
<p>点击<img src="https://pic.downk.cc/item/5eacb502c2a9a83be5247147.png" alt="6"></p>
<p><img src="https://pic.downk.cc/item/5eacb51bc2a9a83be5247f4d.png" alt="7"></p>
<h3 id="3-3-Force-step-into"><a href="#3-3-Force-step-into" class="headerlink" title="3.3 Force step into"></a>3.3 Force step into</h3><p><img src="https://pic.downk.cc/item/5eacb547c2a9a83be52497e2.png" alt="8"></p>
<p>该按钮在调试的时候能进入任何方法。</p>
<h3 id="3-4-step-out"><a href="#3-4-step-out" class="headerlink" title="3.4 step out"></a>3.4 step out</h3><p><img src="https://pic.downk.cc/item/5eacb563c2a9a83be524a8f0.png" alt="9"></p>
<p>如果在调试的时候你进入了一个方法(如f2())，并觉得该方法没有问题，你就可以使用stepout跳出该方法，返回到该方法被调用处的下一行语句。值得注意的是，该方法已执行完毕。</p>
<h3 id="3-5-Drop-frame"><a href="#3-5-Drop-frame" class="headerlink" title="3.5 Drop frame"></a>3.5 Drop frame</h3><p><img src="https://pic.downk.cc/item/5eacb57fc2a9a83be524b88d.png" alt="10"></p>
<p>点击该按钮后，你将返回到当前方法的调用处（如上图，程序会回到main()中）重新执行，并且所有上下文变量的值也回到那个时候。只要调用链中还有上级方法，可以跳到其中的任何一个方法。</p>
<hr>
<h2 id="4-高级调试"><a href="#4-高级调试" class="headerlink" title="4. 高级调试"></a>4. 高级调试</h2><h3 id="4-1-跨断点调试"><a href="#4-1-跨断点调试" class="headerlink" title="4.1 跨断点调试"></a>4.1 跨断点调试</h3><p>设置多个断点，开启调试。</p>
<p><img src="https://pic.downk.cc/item/5eacb5a2c2a9a83be524cb20.png" alt="11"></p>
<p>想移动到下一个断点，点击如下图：</p>
<p><img src="https://pic.downk.cc/item/5eacb5b8c2a9a83be524d581.png" alt="12"></p>
<p>程序将运行一个断点到下一个断点之间需要执行的代码。如果后面代码没有断点，再次点击该按钮将会执行完程序。</p>
<h3 id="4-2-查看断点"><a href="#4-2-查看断点" class="headerlink" title="4.2 查看断点"></a>4.2 查看断点</h3><p><img src="https://pic.downk.cc/item/5eacb5dac2a9a83be524ea3c.png" alt="13"></p>
<p>点击箭头指向的按钮，可以查看你曾经设置过的断点并可设置断点的一些属性。</p>
<p><img src="https://pic.downk.cc/item/5eacb5f8c2a9a83be524f8e2.png" alt="14"></p>
<p>箭头1指向的是你曾经设置过的断点，箭头2可以设置条件断点（满足某个条件的时候，暂停程序的执行，如 c==97）。结束调试后，应该在箭头1处把所设的断点删除(选择要删除的断点后，点击上方的红色减号）。</p>
<h3 id="4-3-设置变量值"><a href="#4-3-设置变量值" class="headerlink" title="4.3 设置变量值"></a>4.3 设置变量值</h3><p><img src="https://pic.downk.cc/item/5eacb61bc2a9a83be5250bcd.png" alt="15"></p>
<p>调试开始后，在红箭头指向的区域可以给指定的变量赋值（鼠标左键选择变量，右键弹出菜单选择setValue…）。这个功能可以更加快速的检测你的条件语句和循环语句。</p>
]]></content>
  </entry>
  <entry>
    <title>IDEA全局搜索</title>
    <url>/2020/05/01/IDEA%E5%85%A8%E5%B1%80%E6%90%9C%E7%B4%A2/</url>
    <content><![CDATA[<h2 id="使用步骤说明"><a href="#使用步骤说明" class="headerlink" title="使用步骤说明"></a>使用步骤说明</h2><h3 id="1、Ctrl-N按名字搜索类"><a href="#1、Ctrl-N按名字搜索类" class="headerlink" title="1、Ctrl+N按名字搜索类"></a>1、Ctrl+N按名字搜索类</h3><p>相当于eclipse的ctrl+shift+R，输入类名可以定位到这个类文件，就像idea在其它的搜索部分的表现一样，搜索类名也能对你所要搜索的内容多个部分进行匹配，而且如果能匹配的自己写的类，优先匹配自己写的类，甚至不是自己写的类也能搜索。</p>
<h3 id="2、Ctrl-Shift-N按文件名搜索文件"><a href="#2、Ctrl-Shift-N按文件名搜索文件" class="headerlink" title="2、Ctrl+Shift+N按文件名搜索文件"></a>2、Ctrl+Shift+N按文件名搜索文件</h3><p>同搜索类类似，只不过可以匹配所有类型的文件了。</p>
<a id="more"></a>

<h3 id="3、Ctrl-H"><a href="#3、Ctrl-H" class="headerlink" title="3、Ctrl+H"></a>3、Ctrl+H</h3><p>查看类的继承关系，例如HashMap的父类是AbstractMap，子类则有一大堆。</p>
<h3 id="4、Ctrl-Alt-B查看子类方法实现"><a href="#4、Ctrl-Alt-B查看子类方法实现" class="headerlink" title="4、Ctrl+Alt+B查看子类方法实现"></a>4、Ctrl+Alt+B查看子类方法实现</h3><p>Ctrl+B可以查看父类或父方法定义，但是不如ctrl+鼠标左键方便。但是在这里，Ctrl+B或ctrl+鼠标左键只能看见Map接口的抽象方法put的定义，不是我们想要的，这时候Ctrl+Alt+B就可以查看HashMap的put方法。</p>
<h3 id="5、Alt-F7查找类或方法在哪被使用"><a href="#5、Alt-F7查找类或方法在哪被使用" class="headerlink" title="5、Alt+F7查找类或方法在哪被使用"></a>5、Alt+F7查找类或方法在哪被使用</h3><p>相当于eclipse的ctrl+shif+H,但是速度快得多。</p>
<h3 id="6、Ctrl-F-Ctrl-Shift-F按照文本的内容查找"><a href="#6、Ctrl-F-Ctrl-Shift-F按照文本的内容查找" class="headerlink" title="6、Ctrl+F/Ctrl+Shift+F按照文本的内容查找"></a>6、Ctrl+F/Ctrl+Shift+F按照文本的内容查找</h3><p>相当于eclipse的ctrl+H，速度优势更加明显。其中Ctrl+F是在本页查找，Ctrl+Shift+F是全局查找。</p>
<h3 id="7、Shift-Shift搜索任何东西"><a href="#7、Shift-Shift搜索任何东西" class="headerlink" title="7、Shift+Shift搜索任何东西"></a>7、Shift+Shift搜索任何东西</h3><p>shift+shift非常强大，可搜索类、资源、配置项、方法等，还能搜索路径。其中搜索路径非常实用，例如你写了一个功能叫hello，在java，js，css，jsp中都有hello的文件夹，那我们可以搜索”hello/“找到路径中包含hello的文件夹。</p>
<h3 id="8、查看接口的实现类"><a href="#8、查看接口的实现类" class="headerlink" title="8、查看接口的实现类"></a>8、查看接口的实现类</h3><p>IDEA 风格 ctrl + alt +B     或者     Ctrl+Alt+鼠标左键</p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/04/29/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>前端数据可视化echarts.js使用指南（转）</title>
    <url>/2020/05/07/%E5%89%8D%E7%AB%AF%E6%95%B0%E6%8D%AE%E5%8F%AF%E8%A7%86%E5%8C%96echarts-js%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97%EF%BC%88%E8%BD%AC%EF%BC%89/</url>
    <content><![CDATA[<h2 id="一、开篇"><a href="#一、开篇" class="headerlink" title="一、开篇"></a>一、开篇</h2><p>首先这里要感谢一下我的公司，因为公司需求上面的新颖(奇葩)的需求，让我有幸可以学习到一些好玩有趣的前端技术，前端技术中好玩而且比较实用的我想应该要数前端的数据可视化这一方面，目前市面上的数据可视化的框架琳琅满目，例如：D3.js、hightcharts.js、echarts.js…………。由于公司对这个项目的需求是1、开发时间短，所以也就限制了D3.js的使用。2、要尽量的减少开发的成本，所以也就不能使用hightcharts.js(hightcharts是一款个人免费，商业付费的框架)。所以在再三的比对之下最终选择了echarts.js</p>
<h2 id="二、echarts-js的优势与总体情况"><a href="#二、echarts-js的优势与总体情况" class="headerlink" title="二、echarts.js的优势与总体情况"></a>二、echarts.js的优势与总体情况</h2><p> echarts.js作为国内的IT三巨头之一的百度的推出一款相对较为成功的开源项目，总体上来说有这样的一些优点</p>
<h3 id="1、echarts-js容易使用"><a href="#1、echarts-js容易使用" class="headerlink" title="1、echarts.js容易使用"></a>1、echarts.js容易使用</h3><p>echarts.js的官方文档比较详细，而且官网中提供大量的使用示例供大家使用</p>
<h3 id="2、echarts-js支持按需求打包"><a href="#2、echarts-js支持按需求打包" class="headerlink" title="2、echarts.js支持按需求打包"></a>2、echarts.js支持按需求打包</h3><p>echarts.js官网提供了在线构建的工具，可以在线构建项目时，选择项目所需要使用到的模块，从而达到减小JS文件的体积</p>
<h3 id="3、echarts-js开源"><a href="#3、echarts-js开源" class="headerlink" title="3、echarts.js开源"></a>3、echarts.js开源</h3><h3 id="4、支持中国地图功能"><a href="#4、支持中国地图功能" class="headerlink" title="4、支持中国地图功能"></a>4、支持中国地图功能</h3><p>这个在其他的一些框架中是没有的，所以为这个功能点个赞</p>
 <a id="more"></a>

<p>但是echarts.js也存在着一些不好的地方，比如说：</p>
<h3 id="1、echarts-js的体积较大"><a href="#1、echarts-js的体积较大" class="headerlink" title="1、echarts.js的体积较大"></a>1、echarts.js的体积较大</h3><p>一个基础的echarts.js都要400K左右，相对于D3.js和hightcharts.js来说都是比较大的</p>
<h3 id="2、echarts-js的可定制性差"><a href="#2、echarts-js的可定制性差" class="headerlink" title="2、echarts.js的可定制性差"></a>2、echarts.js的可定制性差</h3><p>说到echarts.js的定制性差，其实不止是包括echarts.js，hightcharts.js也是如此，因为这一类型的数据可视化框架主要是高度的进行分装，所以你在使用的时候只需要设置一下配置就可以了，但是如果是出现了要绘制配置中不支持的图表怎么办，那么你就只能放弃，尝试着使用其他的框架了</p>
<p>总的来说:从大的方向上面来看，echarts.js还是值得去了解学习使用的，因为echarts.js得到了百度团队的重视，在git上面的更新也是比较的频繁，所以不会出现一些比较严重的bug之类的，最后这款框架一点就是框架的配置文件相当的详细，但是交互API文档虽然有说明，但是还是没有示例来举证，这个可能就是我认为的一个不足之处吧</p>
<h2 id="三、echarts的应用"><a href="#三、echarts的应用" class="headerlink" title="三、echarts的应用"></a>三、echarts的应用</h2><p> 首先要说明一点是，echarts这个框架的配置内容很是多，所以不要尝试着把这个框架中的方法都给记住，这是不太可能的事。但是由于这个框架的配置文件参数比较多，所以我们就需要来学习一下echarts是怎样来对其进行分类的</p>
<p>1、首先echarts的图形化呈现主要是通过配置方法来实现的(setOption),然后是对图形标签进行初始化，最后把配置方法(setOption)赋值到初始化图形中，详细的配置文件请戳这里，这里我就来介绍一下关于配置文件的学习的经验之谈，比较常见的配置大致如下图：</p>
<p><img src="https://images2015.cnblogs.com/blog/728493/201609/728493-20160907235440363-264281746.png" alt="配置"></p>
<p> 上面用红色方框标出来的就是echarts的基础配置，也是我认为的学习echarts一定要掌握的配置，其他的一些配置比如什么时间轴.visualMap组件之类，我认为这些异曲同工，所以这一部分也就是只有在当你的业务需要使用的时候才加入，也就是说，这一部分的知识我认为到时候现炒现卖就可以了（<strong>更正：图标悬停的提示内容应该更正为鼠标悬停的提示内容</strong>），下面我就来讲解一下echarts.js的使用，首先我在官网中下载默认的精简版，下载地址如下：<a href="http://echarts.baidu.com/builder.html，直接下载即可（建议在开发期间使用源码版，方便调试）" target="_blank" rel="noopener">http://echarts.baidu.com/builder.html，直接下载即可（建议在开发期间使用源码版，方便调试）</a></p>
<h3 id="3-1-echarts-js入门基础小项目1"><a href="#3-1-echarts-js入门基础小项目1" class="headerlink" title="3.1 echarts.js入门基础小项目1"></a>3.1 echarts.js入门基础小项目1</h3><p>HTML和JavaScript代码：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>echarts.js案例一<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">'echarts.js'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"chart"</span> <span class="attr">style</span>=<span class="string">"width:400px;height:400px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span><br><span class="line"><span class="actionscript">    <span class="comment">// 初始化图表标签</span></span></span><br><span class="line"><span class="javascript">    <span class="keyword">var</span> myChart = echarts.init(<span class="built_in">document</span>.getElementById(<span class="string">'chart'</span>));</span></span><br><span class="line"><span class="actionscript">    <span class="keyword">var</span> options=&#123;</span></span><br><span class="line"><span class="actionscript">        <span class="comment">//定义一个标题</span></span></span><br><span class="line">        title:&#123;</span><br><span class="line"><span class="actionscript">            text:<span class="string">'测试成绩'</span></span></span><br><span class="line">        &#125;,</span><br><span class="line">        legend:&#123;</span><br><span class="line"><span class="actionscript">            data:[<span class="string">'销量'</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">//X轴设置</span></span></span><br><span class="line">        xAxis:&#123;</span><br><span class="line"><span class="actionscript">            data:[<span class="string">'60分'</span>,<span class="string">'70分'</span>,<span class="string">'80分'</span>,<span class="string">'90分'</span>,<span class="string">'100分'</span>]</span></span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis:&#123;</span><br><span class="line">        &#125;,</span><br><span class="line"><span class="actionscript">        <span class="comment">//name=legend.data的时候才能显示图例</span></span></span><br><span class="line">        series:[&#123;</span><br><span class="line"><span class="actionscript">            name:<span class="string">'销量'</span>,</span></span><br><span class="line"><span class="actionscript">            type:<span class="string">'bar'</span>,</span></span><br><span class="line"><span class="actionscript">            data:[<span class="string">'12'</span>,<span class="string">'32'</span>,<span class="string">'45'</span>,<span class="string">'21'</span>,<span class="string">'1'</span>]</span></span><br><span class="line">        &#125;]</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br><span class="line">    myChart.setOption(options);</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>


<p> 运行效果如下图，如果需要在线观看的请戳<a href="https://www.oschina.net/" target="_blank" rel="noopener">这里</a></p>
<p> <img src="https://images2015.cnblogs.com/blog/728493/201609/728493-20160908012305879-2018327405.png" alt="测试"></p>
<p> 注意事项：这里案例是最基础，但是里面还是有一个知识点来的，就是在使用echarts.js的时候一定要配置xAxis,yAxis,series这三个参数，如果是不想设置的话也要初始化可以将其设置为空JSON就可以了，要不然会出项报错，同时要保证在echarts.init之前的对象是有宽高的，要不然也会出现错误</p>
<h3 id="3-2-echarts-js多系列综合使用DEMO"><a href="#3-2-echarts-js多系列综合使用DEMO" class="headerlink" title="3.2 echarts.js多系列综合使用DEMO"></a>3.2 echarts.js多系列综合使用DEMO</h3><p>在讲解这个案例之前，首先我们来假设一个命题，假设要统计一个商店一周的购买金额和一周的销售金额，其中的购买金额用柱状图表示，销售金额用折线图表示，然后还要标出一周中最大值和最小值，同时还要求出销售和购买的平均数，购买金额分别是[200,312,431,241,175,275,369]，销售金额[321,432,543,376,286,298,400]</p>
<p>这个问题其实也不是很难，想一想，其实也就是一个把多个 系列图表应用到一个画布上面的过程，为了简短文章的篇幅，所以把不贴出全部的代码，仅贴出主要的其中关键的代码，代码如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">series:[&#123;</span><br><span class="line">    name:'购买金额',</span><br><span class="line">    <span class="selector-tag">type</span><span class="selector-pseudo">:'bar'</span>,</span><br><span class="line">    <span class="selector-tag">data</span>:<span class="selector-attr">[200,312,431,241,175,275,369]</span>,</span><br><span class="line">    <span class="selector-tag">markPoint</span>: &#123;</span><br><span class="line">        <span class="attribute">data</span>: [</span><br><span class="line">            &#123;type: <span class="string">'max'</span>, name: <span class="string">'最大值'</span>&#125;,</span><br><span class="line">            &#123;<span class="attribute">type</span>: <span class="string">'min'</span>, name: <span class="string">'最小值'</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="selector-tag">markLine</span>:&#123;</span><br><span class="line">        <span class="attribute">data</span>:[</span><br><span class="line">            &#123;type:<span class="string">'average'</span>,name:<span class="string">'平均值'</span>,itemStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                    color:<span class="string">'green'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;,&#123;</span><br><span class="line">    <span class="attribute">name</span>:<span class="string">'销售金额'</span>,</span><br><span class="line">    type:<span class="string">'line'</span>,</span><br><span class="line">    data:[<span class="number">321</span>,<span class="number">432</span>,<span class="number">543</span>,<span class="number">376</span>,<span class="number">286</span>,<span class="number">298</span>,<span class="number">400</span>],</span><br><span class="line">    markPoint: &#123;</span><br><span class="line">        data: [</span><br><span class="line">            &#123;type: <span class="string">'max'</span>, name: <span class="string">'最大值'</span>&#125;,</span><br><span class="line">            &#123;<span class="attribute">type</span>: <span class="string">'min'</span>, name: <span class="string">'最小值'</span>&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="selector-tag">markLine</span>:&#123;</span><br><span class="line">        <span class="attribute">data</span>:[</span><br><span class="line">            &#123;type:<span class="string">'average'</span>,name:<span class="string">'平均值'</span>,itemStyle:&#123;</span><br><span class="line">                normal:&#123;</span><br><span class="line">                    color:<span class="string">'blue'</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;&#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>

<p> 实现效果：</p>
<p><img src="https://images2015.cnblogs.com/blog/728493/201609/728493-20160911183854127-115268624.png" alt="效果"></p>
<p>如需看完整的代码请戳<a href="http://runjs.cn/detail/9wiipqv7" target="_blank" rel="noopener">这里</a>，自行fork下来</p>
<h3 id="3-3-echarts-js响应式实现"><a href="#3-3-echarts-js响应式实现" class="headerlink" title="3.3 echarts.js响应式实现"></a>3.3 echarts.js响应式实现</h3><p>echarts响应式在echarts官网上面的介绍比较详细，这里原理跟CSS3的媒体查询有点类似，但是echarts.js的响应除了支持媒体查询的在不同情况下面的相应还支持，根据长宽比来相应的方法，但是在官方文档中还是有一点缺陷的，比如：一个是案例中的响应式没有涉及到处理series之外的响应，另外一个是按照DEMO中去做，会发现每次都要刷新页面才能出现响应的结果，所以下面我将写一个简单的案例来解决这些问题，数据样式与上面的例子一样</p>
<p>这里就把所有的JS代码贴出来：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">var echart=echarts.init(document.getElementById('main1'));</span><br><span class="line">        var option=&#123;</span><br><span class="line">            <span class="selector-tag">baseOption</span>:&#123;</span><br><span class="line">                    <span class="attribute">title</span>:&#123;</span><br><span class="line">                    text:<span class="string">'模拟商店一周销售情况'</span>,</span><br><span class="line">                    subtext:<span class="string">'虚拟数据'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="selector-tag">legend</span>:&#123;</span><br><span class="line">                    <span class="attribute">data</span>:[<span class="string">'购买金额'</span>,<span class="string">'销售金额'</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="selector-tag">xAxis</span>:&#123;</span><br><span class="line">                    <span class="attribute">data</span>:[<span class="string">'周一'</span>,<span class="string">'周二'</span>,<span class="string">'周三'</span>,<span class="string">'周四'</span>,<span class="string">'周五'</span>,<span class="string">'周六'</span>,<span class="string">'周日'</span>]</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="selector-tag">yAxis</span>:&#123;</span><br><span class="line"></span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="selector-tag">tooltip</span>:&#123;</span><br><span class="line">                    <span class="attribute">show</span>:true,</span><br><span class="line">                    formatter:<span class="string">'系列名:&#123;a&#125;&lt;br /&gt;类目:&#123;b&#125;&lt;br /&gt;数值:&#123;c&#125;'</span></span><br><span class="line">                &#125;,</span><br><span class="line">                series:[&#123;</span><br><span class="line">                    name:'购买金额',</span><br><span class="line">                    <span class="selector-tag">type</span><span class="selector-pseudo">:'bar'</span>,</span><br><span class="line">                    <span class="selector-tag">data</span>:<span class="selector-attr">[200,312,431,241,175,275,369]</span>,</span><br><span class="line">                    <span class="selector-tag">markPoint</span>: &#123;</span><br><span class="line">                        <span class="attribute">data</span>: [</span><br><span class="line">                            &#123;type: <span class="string">'max'</span>, name: <span class="string">'最大值'</span>&#125;,</span><br><span class="line">                            &#123;<span class="attribute">type</span>: <span class="string">'min'</span>, name: <span class="string">'最小值'</span>&#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="selector-tag">markLine</span>:&#123;</span><br><span class="line">                        <span class="attribute">data</span>:[</span><br><span class="line">                            &#123;type:<span class="string">'average'</span>,name:<span class="string">'平均值'</span>,itemStyle:&#123;</span><br><span class="line">                                normal:&#123;</span><br><span class="line">                                    color:<span class="string">'green'</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;&#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,&#123;</span><br><span class="line">                    <span class="attribute">name</span>:<span class="string">'销售金额'</span>,</span><br><span class="line">                    type:<span class="string">'line'</span>,</span><br><span class="line">                    data:[<span class="number">321</span>,<span class="number">432</span>,<span class="number">543</span>,<span class="number">376</span>,<span class="number">286</span>,<span class="number">298</span>,<span class="number">400</span>],</span><br><span class="line">                    markPoint: &#123;</span><br><span class="line">                        data: [</span><br><span class="line">                            &#123;type: <span class="string">'max'</span>, name: <span class="string">'最大值'</span>&#125;,</span><br><span class="line">                            &#123;<span class="attribute">type</span>: <span class="string">'min'</span>, name: <span class="string">'最小值'</span>&#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="selector-tag">markLine</span>:&#123;</span><br><span class="line">                        <span class="attribute">data</span>:[</span><br><span class="line">                            &#123;type:<span class="string">'average'</span>,name:<span class="string">'平均值'</span>,itemStyle:&#123;</span><br><span class="line">                                normal:&#123;</span><br><span class="line">                                    color:<span class="string">'blue'</span></span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;&#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            media:[</span><br><span class="line">                &#123;</span><br><span class="line">                    //小与1000像素时候响应</span><br><span class="line">                    <span class="selector-tag">query</span>:&#123;</span><br><span class="line">                        <span class="attribute">maxWidth</span>:<span class="number">1000</span></span><br><span class="line">                    &#125;,</span><br><span class="line">                    <span class="selector-tag">option</span>:&#123;</span><br><span class="line">                        <span class="attribute">title</span>:&#123;</span><br><span class="line">                            show:true,</span><br><span class="line">                            text:<span class="string">'测试一下'</span></span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            ]</span><br><span class="line">        &#125;;</span><br><span class="line">        //每次窗口大小改变的时候都会触发onresize事件，这个时候我们将echarts对象的尺寸赋值给窗口的大小这个属性，从而实现图表对象与窗口对象的尺寸一致的情况</span><br><span class="line">        window.onresize = echart.resize;</span><br><span class="line">        <span class="selector-tag">echart</span><span class="selector-class">.setOption</span>(<span class="selector-tag">option</span>);</span><br></pre></td></tr></table></figure>



<p>效果展示：原本是想要展示GIF的，但是录制的时候卡顿太严重所以也就只能发一下在无刷新的时候对比图片</p>
<p><img src="https://images2015.cnblogs.com/blog/728493/201609/728493-20160911221003644-1246511387.png" alt="1"> <img src="https://images2015.cnblogs.com/blog/728493/201609/728493-20160911221032584-1631230779.png" alt="2"></p>
<p>3.4 echarts的API交互</p>
<p>首先我们来理清官方文档中的API的分类，大致的API可以分成这样的四类</p>
<p><img src="https://images2015.cnblogs.com/blog/728493/201609/728493-20160911222251042-1753971938.png" alt="API"></p>
<p>这里我们就来解释一下echarts对象里面主要是包括一些销毁对象(dispose)，注册地图(registerMap)，初始化对象(echarts.init),关联对象(connect)，属于全局属性的设置，echartsInstance这个是包含echarts图中的某些属性的获取或者设置，获取宽高(getWidth、getHeight),获取配置(getOption)，设置配置(setOption)等操作action和events这两个操作在上图中已经很明白了，所以就不多做解释，具体的使用方法要与业务进行挂钩才有意义，所以在这里就不提供DEMO了，我相信大家看一下文档都能够看懂个究竟。</p>
<p>四、echarts常见问题解决</p>
<p> 1、当X轴上面要渲染的数据太多的时候就会出现只渲染出来一部分，但是图表中的数据显示(比如说柱状图中的每个柱子)又会自动的进行宽度的缩放，所以会导致X轴与图中的信息不相匹配的问题，解决的方法是在X轴设置axisLabel :{ interval:0 }这个属性问题就可以解决了，Y轴的使用方法相同</p>
<p>2、为了使echart图表随着浏览器的大小发生响应式变化，所以需要在设置配置之前添加 window.onresize = echart.resize;  具体参照3.3 示例</p>
<p><strong>内容持续更新中，敬请期待</strong></p>
<p>五、总结</p>
<p> 虽然echarts在同类型的数据可视化框架中还算是比较的简单易用的，但是在入手的时候可能也会有一些比较麻烦的地方困扰着你，比如文档这么多我怎么看，实例已经比较齐全了我还需要看API文档吗，这些问题我想在这里统一的说一下，其实echarts的学习无外乎就是先了解一下框架大致上的分类，然后是在将全部的API阅读以便，使对框架有一个全局的认识，然后在通过实践去深入学习，示例只不过是这一步的一个辅助而已，只有扎扎实实的通过学习API一步一个脚印去了解学习，才能做到在使用的时候心中有底。以上的文章是博主在学习和项目中使用echarts的一些体会，希望对大家有帮助</p>
]]></content>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
  <entry>
    <title>我的第一篇博文</title>
    <url>/2020/04/30/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E6%96%87/</url>
    <content><![CDATA[<p>总算是通过自己的学习搭建了属于自己的博客网站，虽然说步骤也不是怎么的困难但是也是通过自己的课外学习成功搭建出来了，关于MarkDown格式我之前有所耳闻但是一直没有系统地学习过，那么就从今天开始学习并且慢慢地搭建属于自己的博客吧！</p>
<p>“博观而约取,厚积而薄发”，这是大诗人苏轼的感悟，学习也就像是搭积木的过程，只有自己每一天不断的积累，才能有所收获，学习知识不是一蹴而就的。</p>
<p>MarkDown语言使用帮助：<a href="https://mazhuang.org/markdown-intro/" target="_blank" rel="noopener">https://mazhuang.org/markdown-intro/</a></p>
]]></content>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
  <entry>
    <title>前路漫漫，道路还是很坎坷</title>
    <url>/2020/05/04/%E5%89%8D%E8%B7%AF%E6%BC%AB%E6%BC%AB%EF%BC%8C%E9%81%93%E8%B7%AF%E8%BF%98%E6%98%AF%E5%BE%88%E5%9D%8E%E5%9D%B7/</url>
    <content><![CDATA[<p>有的时候学的越多，内心就越迷茫，自己学了那么多，当我毕业之后在工作单位还用的上吗？万一自己将来没找到工作我将来又该何去何从？特别是当我今天看了B站<a href="https://www.bilibili.com/video/BV1B7411m7qz" target="_blank" rel="noopener">“11年程序汪写给方向迷茫的java程序员”</a>这一视屏，心里的不安越加沉重，今年因为疫情原因，已经耳闻有许多互联网从业者因此而受到了波及，他们有些人如此优秀都不免被公司裁掉，那像我这样技术又不够的人前路在哪里呢？</p>
<p><a href="https://www.jianshu.com/p/25aa5e478a13" target="_blank" rel="noopener">程序员过了35岁，就注定只能转行了？</a>程序员也是一定程度上是算是吃青春饭的，人不免老去，都会有不中用的一天，当自己没有价值了，难道只能被迫转行？确实一想到未来，我的内心里面就没有安全感。</p>
<p>哎，都是我的自怨自艾，还是想太多了。继续自己的学习积累吧，至于未来，谁知道呢？</p>
]]></content>
      <tags>
        <tag>闲聊</tag>
      </tags>
  </entry>
</search>
